local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/Giangplay/Script/refs/heads/main/Orion_Library_PE_V2.lua"))()
local Player = game.Players.LocalPlayer.DisplayName
local User = game.Players.LocalPlayer.Name
local Slot = game.Players.LocalPlayer.PlayerData.Loadout.Slots
local Type = game.Players.LocalPlayer.PlayerData.Loadout.Type
local selectedBank = "Default"
local selectedCannon = "Default"
local selectedMenu = "N/A"
local selectedMusic = "N/A"
local FcMaster = true
CamShakeIntensity = 10 

local function enableAntiAFK()
    if not connection then
        connection = player.Idled:Connect(function()
            if getgenv().afk6464 then
                VirtualUser:CaptureController()
                VirtualUser:ClickButton2(Vector2.new())
            end
        end)
    end
end

local function disableAntiAFK()
    if connection then
        connection:Disconnect()
        connection = nil
    end
end

local function loop()
    while FcMaster do
        if getgenv().afk6464 then
            enableAntiAFK()
        else
            disableAntiAFK()
        end
        wait(1)
    end
end

spawn(loop)

if not getgenv().afk6464 then
    getgenv().afk6464 = false
end

local function SaveLoadout(B1, B2, B3, B4, B5, B6, B7, B8, A1, A2, A3, A4, A5, A6, A7, A8, C, B)
    local args = {
        [1] = {
            ["Type"] = {
                { "Slot1", B1 }, { "Slot2", B2 }, { "Slot3", B3 }, { "Slot4", B4 },
                { "Slot5", B5 }, { "Slot6", B6 }, { "Slot7", B7 }, { "Slot8", B8 }
            },
            ["Slots"] = {
                { "Slot1", A1 }, { "Slot2", A2 }, { "Slot3", A3 }, { "Slot4", A4 },
                { "Slot5", A5 }, { "Slot6", A6 }, { "Slot7", A7 }, { "Slot8", A8 }
            },
            ["Base"] = {
                ["Cannon"] = C,
                ["Bank"] = B
            }
        }
    }

    game:GetService("ReplicatedStorage").Events.RemoteEvents.SaveLoadout:FireServer(unpack(args))
end

local function Spawn(Name, Val)
    repeat
        game:GetService("ReplicatedStorage").Events.RemoteFunction.PlayerSpawn:InvokeServer(Name)
        wait(1)
    until Val == false
end

local function Auto1(val)
    repeat
        Spawn("Slot1", val)
        Spawn("Slot2", val)
        Spawn("Slot3", val)
        Spawn("Slot4", val)
        Spawn("Slot5", val)
        Spawn("Slot6", val)
        Spawn("Slot7", val)
        Spawn("Slot8", val)
        Spawn("Bank", val)
        Spawn("Cannon", val)
    until val == false
end

local function Auto2(val)
    repeat
        Spawn("Slot1", val)
        Spawn("Bank", val)
        local args = {
            [1] = "Chapter1";
            [2] = 11;
            [3] = 1;
            [4] = 1;
            [5] = false;
            [6] = {};
            [7] = false;
        }

        game:GetService("ReplicatedStorage"):WaitForChild("Events", 9e9):WaitForChild("RemoteFunction", 9e9):WaitForChild("StartBattle", 9e9):InvokeServer(unpack(args))
        wait(1)
    until val == false
end

local function Auto3(val)
    repeat
        Spawn("Slot1", val)
        Spawn("Bank", val)
        local args = {
            [1] = "Chapter2";
            [2] = 10;
            [3] = 1;
            [4] = 1;
            [5] = false;
            [6] = {};
            [7] = false;
        }

        game:GetService("ReplicatedStorage"):WaitForChild("Events", 9e9):WaitForChild("RemoteFunction", 9e9):WaitForChild("StartBattle", 9e9):InvokeServer(unpack(args))
        wait(1)
    until val == false
end

local clockTime = 0
local running = false
local totalXPGained = 0
local Ftime = 0 
local XPPerHour = 0
local lastXPValue = game:GetService("Players").LocalPlayer.PlayerData.Currency.Experience.Value

local function formatTime(seconds)
    local hours = math.floor(tonumber(seconds) / 3600)
    local minutes = math.floor((seconds % 3600) / 60)
    local sec = seconds % 60
    return string.format("%02d:%02d:%02d", hours, minutes, sec)
end

local function startClock()
    if running then return end
    running = true

    while running do
        if getgenv().AF then
            clockTime = clockTime + 1
        else
            running = false
        end
        task.wait(1) 
    end
end

game:GetService("RunService").Stepped:Connect(function()
    if getgenv().AF and not running then
        wait(5)
        startClock()
    end
end)

task.spawn(function()
while FcMaster do
    local FinalXP = game:GetService("Players").LocalPlayer.PlayerData.Currency.Experience.Value
    Ftime = formatTime(clockTime)
    local XPGained = FinalXP - lastXPValue
    totalXPGained = totalXPGained + XPGained
    XPPerHour = (totalXPGained / clockTime) * 3600

    ElapsedTime:Set(" .. Ftime .. ")
    XPGainedLabel:Set(" .. totalXPGained .. ")
    XPPerHourLabel:Set(" .. tostring(math.floor(XPPerHour)) .. ")
    TotalExperience:Set(" .. game.Players.LocalPlayer.PlayerData.Currency.Experience.Value .. ")

    lastXPValue = FinalXP
    wait(1)
end
end)

function SendMessageEMBED(url, embed)
    local http = game:GetService("HttpService")
    local headers = {
        ["Content-Type"] = "application/json"
    }
    local data = {
        ["embeds"] = {
            {
                ["title"] = embed.title,
                ["description"] = embed.description,
                ["color"] = embed.color,
                ["fields"] = embed.fields,
                ["footer"] = {
                    ["text"] = embed.footer.text
                },
                ["thumbnail"] = {
                    ["url"] = embed.thumbnail_url
                }
            }
        }
    }
    local body = http:JSONEncode(data)
    local response = request({
        Url = url,
        Method = "POST",
        Headers = headers,
        Body = body
    })
end

local WebHook = "e"
local interval = 1800

function SendAUTOFARMInfo(Ftime, totalXPGained, XPPerHour)
    local embed = {
        ["title"] = "The Battle Bricks | XP Gained",
        ["description"] = "Stats",
        ["color"] = 16777215,
        ["fields"] = {
            {
                ["name"] = "Time Elapsed",
                ["value"] = Ftime or 0
            },
            {
                ["name"] = "Experience Gained:",
                ["value"] = tostring(totalXPGained) or 0
            },
            {
                ["name"] = "Experience Per Hour:",
                ["value"] = tostring(math.floor(XPPerHour)) or 0
            },
            {
                ["name"] = "Total Experience:",
                ["value"] = game:GetService("Players").LocalPlayer.PlayerData.Currency.Experience.Value or 0
            },
        },
        ["footer"] = {
            ["text"] = "e"
        },
        ["thumbnail_url"] = "https://tr.rbxcdn.com/180DAY-74cebd5bca710a7ae16e247ff2ba806e/768/432/Image/Webp/noFilter"
    }

    if WebHook then
        SendMessageEMBED(WebHook, embed)
    end
end

local Window = OrionLib:MakeWindow({ Name = "The Battle Bricks", HidePremium = false, SaveConfig = true, ConfigFolder = "OhioTBB" })

local H = Window:MakeTab({ Name = "Home", Icon = "rbxassetid://4483345998", PremiumOnly = false })
H:AddLabel("Welcome! " .. Player .. " (" .. User .. ") Thank you for using my script! :)")
H:AddParagraph("This script is open-source", "Feel free to improve or take parts of the code, but please do not skid.\nCredits are appreciated!")
H:AddParagraph("Update 5!", "Give battler is patched due to the new update. :(")

H:AddButton({
    Name = "Remove UI",
    Callback = function()
        OrionLib:MakeNotification({ Name = "Notification!", Content = "Removing The UI... :(", Image = "rbxassetid://4483345998", Time = 3 })
        wait(3)
        OrionLib:Destroy()
    end
})

local M = Window:MakeTab({ Name = "Main", Icon = "rbxassetid://4483345998", PremiumOnly = false })

M:AddDropdown({
    Name = "Select Bank",
    Default = "Default",
    Options = { "Default", "Investment", "Powerhouse", "Detonator", "Ignition" },
    Callback = function(Value) selectedBank = Value end
})

M:AddDropdown({
    Name = "Select Cannon",
    Default = "Default",
    Options = { "Default", "Gatling", "Slammer", "Recoil", "Treasure", "Absorber", "Liberty" },
    Callback = function(Value) selectedCannon = Value end
})

M:AddButton({
    Name = "Change Bank/Cannon",
    Callback = function()
        local bankMap = { Default = 1, Investment = 2, Powerhouse = 3, Detonator = 4, Ignition = 5 }
        local cannonMap = { Default = 1, Gatling = 2, Slammer = 3, Recoil = 4, Treasure = 5, Absorber = 6, Liberty = 7 }
        
        local bankID = bankMap[selectedBank] or 1
        local cannonID = cannonMap[selectedCannon] or 1
        
        SaveLoadout(
            Type.Slot1.Value, Type.Slot2.Value, Type.Slot3.Value, Type.Slot4.Value,
            Type.Slot5.Value, Type.Slot6.Value, Type.Slot7.Value, Type.Slot8.Value,
            Slot.Slot1.Value, Slot.Slot2.Value, Slot.Slot3.Value, Slot.Slot4.Value,
            Slot.Slot5.Value, Slot.Slot6.Value, Slot.Slot7.Value, Slot.Slot8.Value,
            cannonID, bankID
        )
    end
})

local W = Window:MakeTab({ Name = "Spam", Icon = "rbxassetid://4483345998", PremiumOnly = false })

W:AddToggle({
	Name = "Spam Slot 1",
	Default = false,
	Callback = function(Value)
		Spawn("Slot1", Value)
	end    
})

W:AddToggle({
	Name = "Spam Slot 2",
	Default = false,
	Callback = function(Value)
		Spawn("Slot2", Value)
	end    
})

W:AddToggle({
	Name = "Spam Slot 3",
	Default = false,
	Callback = function(Value)
		Spawn("Slot3", Value)
	end    
})

W:AddToggle({
	Name = "Spam Slot 4",
	Default = false,
	Callback = function(Value)
		Spawn("Slot4", Value)
	end    
})

W:AddToggle({
	Name = "Spam Slot 5",
	Default = false,
	Callback = function(Value)
		Spawn("Slot5", Value)
	end    
})

W:AddToggle({
	Name = "Spam Slot 6",
	Default = false,
	Callback = function(Value)
		Spawn("Slot6", Value)
	end    
})

W:AddToggle({
	Name = "Spam Slot 7",
	Default = false,
	Callback = function(Value)
		Spawn("Slot7", Value)
	end    
})

W:AddToggle({
	Name = "Spam Slot 8",
	Default = false,
	Callback = function(Value)
		Spawn("Slot8", Value)
	end    
})

W:AddToggle({
	Name = "Spam Bank",
	Default = false,
	Callback = function(Value)
		Spawn("Bank", Value)
	end    
})

W:AddToggle({
	Name = "Spam Cannon",
	Default = false,
	Callback = function(Value)
		Spawn("Cannon", Value)
	end    
})

W:AddParagraph("To make auto farm stage.","Use Octo-Spy, Enter Stage, Look for StartBattle, RemoteEvents\nClick Copy Auto Stage Set-up, and paste StartBattle RemoteEvents following the guide!")

W:AddButton({
    Name = "Copy Auto Stage Set-up",
    Callback = function()
        local scriptToCopy = [[
while true do
    wait(1)
    -- Paste the start battle remote here
end
        ]]

        local success = pcall(function()
            if setclipboard then
                setclipboard(scriptToCopy)
            elseif toclipboard then
                toclipboard(scriptToCopy)
            else
                error("Clipboard function not supported.")
            end
        end)

        if success then
            OrionLib:MakeNotification({
                Name = "Set-up Copied!",
                Content = "Check clipboard. If there's none, your executor doesn't support clipboard functions.",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
        else
            OrionLib:MakeNotification({
                Name = "Error!",
                Content = "Your executor does not support clipboard copying.",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
        end
    end
})

local P = Window:MakeTab({ Name = "Auto Farm", Icon = "rbxassetid://4483345998", PremiumOnly = false })

P:AddToggle({
	Name = "Auto Spam All (Mostly used when progress)",
	Default = false,
	Callback = function(Value)
		Auto1(Value)
	end    
})

P:AddToggle({
	Name = "Slow Auto Farm XP (Ch. 1 Stage 11)",
	Default = false,
	Callback = function(Value)
		Auto2(Value)
	end    
})

P:AddParagraph("Unlock Ch. 1 Stage 11.", "To use this function put good dps on slot1!")

P:AddToggle({
	Name = "Fast Auto Farm XP (Ch. 2 Stage 10)",
	Default = false,
	Callback = function(Value)
		Auto3(Value)
	end    
})

P:AddParagraph("Unlock Ch. 2 Stage 10.", "To use this function put dual speed coils on slot1!")

local T = Window:MakeTab({ Name = "Webhook", Icon = "rbxassetid://4483345998", PremiumOnly = false })

local ElapsedTime = T:AddParagraph("Time Elapsed", Ftime or "00:00:00")
local XPGainedLabel = T:AddParagraph("Experience Gained", tostring(totalXPGained) or "0")
local XPPerHourLabel = T:AddParagraph("Experience Per Hour", tostring(math.floor(XPPerHour)) or "0")
local TotalExperience = T:AddParagraph("Total Experience", game:GetService("Players").LocalPlayer.PlayerData.Currency.Experience.Value or "0")

T:AddTextbox({
    Name = "Webhook URL",
    Default = "URL",
    TextDisappear = false,
    Callback = function(Value)
        WebHookURLBool = tostring(Value)
        WebHook = tostring(Value)
    end	  
})

T:AddTextbox({
    Name = "Interval (Every Second Send Webhook)",
    Default = "1800",
    TextDisappear = false,
    Callback = function(Value)
        IntervalBool = tonumber(Value)
        interval = tonumber(Value)
    end	  
})

T:AddToggle({
	Name = "Activate Webhook",
	Default = false,
	Callback = function(Value)
		WebHookActiveBool = Value
        getgenv().WBhook = Value
	end    
})

XPPerHour = 0

local WebHook = "e"
local interval = 1800

local WebHookURLBool
local IntervalBool
local WebHookActiveBool

coroutine.wrap(function()
    while true do
        if getgenv().WBhook and getgenv().AF and not getgenv().intervalLock then
            getgenv().intervalLock = true
            SendAUTOFARMInfo(Ftime, totalXPGained, XPPerHour)
            task.wait(interval)
            getgenv().intervalLock = false
        end
        task.wait(1)
    end
end)()

local V = Window:MakeTab({ Name = "Misc", Icon = "rbxassetid://4483345998", PremiumOnly = false })

V:AddButton({
    Name = "Change to Casual Difficulty",
    Callback = function()
        local args = {
            [1] = {
                [1] = { "Difficulty", 1 }
            }
        }
        game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("RemoteEvents"):WaitForChild("ChangeSettings"):FireServer(unpack(args))
    end
})

V:AddButton({
    Name = "Change to Normal Difficulty",
    Callback = function()
        local args = {
            [1] = {
                [1] = { "Difficulty", 2 }
            }
        }
        game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("RemoteEvents"):WaitForChild("ChangeSettings"):FireServer(unpack(args))
    end
})

V:AddButton({
    Name = "Change to Tumore Difficulty",
    Callback = function()
        local args = {
            [1] = {
                [1] = { "Difficulty", 3 },
                [2] = { "UnlockedTumore", 1 }
            }
        }
        game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("RemoteEvents"):WaitForChild("ChangeSettings"):FireServer(unpack(args))
    end
})

V:AddButton({
    Name = "Remove Possible Anti-Cheat Cutscenes",
    Callback = function()
        game:GetService("ReplicatedStorage").Cutscenes.TheresNothing:Destroy()
        game:GetService("ReplicatedStorage").Cutscenes.EyeOfRah:Destroy()
        game:GetService("ReplicatedStorage").Cutscenes.RaigQuit:Destroy()
        game:GetService("ReplicatedStorage").Cutscenes.ChangeYourTime:Destroy()
    end
})

local ostOptions = {}
for _, v in ipairs(game.SoundService.OST:GetChildren()) do
    table.insert(ostOptions, v.Name)
end

V:AddDropdown({
    Name = "Select OST",
    Default = "N/A",
    Options = ostOptions,
    Callback = function(Value) selectedMusic = Value end
})

V:AddButton({
    Name = "Change OST",
    Callback = function()
        game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("BindableEvents"):WaitForChild("MusicChange"):Fire(selectedMusic)
    end
})

local UI = Window:MakeTab({ Name = "GUI", Icon = "rbxassetid://4483345998", PremiumOnly = false })

UI:AddDropdown({
    Name = "Select Menu",
    Default = "N/A",
    Options = { "Lobby", "Almanac", "Difficulty", "MainMenu", "MainChapter", "SubChapter", "Shop", "Loadout", "StageSelect", "Loading", "FinishedLoading" },
    Callback = function(Value)
        selectedMenu = Value
    end
})

UI:AddButton({
    Name = "Change Menu",
    Callback = function()
        local event = game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("BindableEvents"):WaitForChild("MenuSelect")
        
        if selectedMenu == "Loading" or selectedMenu == "FinishedLoading" then
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("BindableEvents"):WaitForChild("Transition"):Fire()
        else
            event:Fire(selectedMenu)
        end
    end
})

UI:AddButton({
    Name = "Clock Quiz",
    Callback = function()
        local C = game:GetService("ReplicatedStorage").Cutscenes.ClockQuiz:Clone()
        C.Parent = game.Players.LocalPlayer.PlayerGui
    end
})

UI:AddButton({
    Name = "Chronos Intro",
    Callback = function()
        local C = game:GetService("ReplicatedStorage").Cutscenes.ChronosIntro:Clone()
        C.Parent = game.Players.LocalPlayer.PlayerGui
    end
})

UI:AddButton({
    Name = "Make Transition",
    Callback = function()
        game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("BindableEvents"):WaitForChild("Transition"):Fire()
    end
})

UI:AddTextbox({
    Name = "Cam Shake Value",
    Default = "10",
    TextDisappear = false,
    Callback = function(Value)
        CamShakeIntensity = tonumber(Value) or 10 -- Ensure it's a number; default to 10 if invalid
    end	  
})

UI:AddButton({
    Name = "Trigger Cam Shake",
    Callback = function()
        local camShakeEvent = game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("BindableEvents"):WaitForChild("CamShake")
        camShakeEvent:Fire(CamShakeIntensity)
    end
})

local S = Window:MakeTab({ Name = "Scripts", Icon = "rbxassetid://4483345998", PremiumOnly = false })

S:AddButton({
    Name = "Dex For Mobile",
    Callback = function()
        local success, result = pcall(loadstring, game:HttpGet("https://raw.githubusercontent.com/realredz/DEX-Explorer/refs/heads/main/Mobile.lua"))
        if success then 
            result() 
        else 
            warn("Failed to load Dex for Mobile.") 
        end
    end
})

S:AddButton({
    Name = "Dex For PC",
    Callback = function()
        local success, result = pcall(loadstring, game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/refs/heads/main/dex.lua"))
        if success then 
            result() 
        else 
            warn("Failed to load Dex for PC.") 
        end
    end
})

S:AddButton({
    Name = "Octo Spy",
    Callback = function()
        local success, result = pcall(loadstring, game:HttpGet("https://raw.githubusercontent.com/InfernusScripts/Octo-Spy/refs/heads/main/Main.lua", true))
        if success then 
            result() 
        else 
            warn("Failed to load Octo Spy.") 
        end
    end
})

S:AddToggle({
    Name = "Anti-Afk",
    Default = false,
    Callback = function(Value)
        getgenv().afk6464 = Value
        local message = Value and "Anti Afk Enabled!" or "Anti Afk Disabled."
        
        OrionLib:MakeNotification({
            Name = message,
            Content = "Done!",
            Image = "rbxassetid://4483345998",
            Time = 5
        })
    end
})

OrionLib:MakeNotification({
    Name = "Script Loaded!",
    Content = "Enjoy!",
    Image = "rbxassetid://4483345998",
    Time = 10
})

OrionLib:Init()
